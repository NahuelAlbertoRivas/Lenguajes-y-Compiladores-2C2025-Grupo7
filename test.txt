#+ \ Esto es un "programa" # +#

#+ /* Bloque de declaración de variables // +#
init { #+|+#
	a1, b1, a, b, ar0 : Float
	var1, c, d, h, i, j, d, e, f: Int
	s, h, contador : Int
	p1, p2, p3 : String 
	D, y, res : Boolean
}

#+ ASignaciones +#
a := 1
b := 1
c := 2

a := 99999.99
a := 99.
a := .9999

b := "@sdADaSjfla%dfg"
b := "asldk  fh sjf"

#+ Condicional simple sin else +#
if(a==0 AND b<c)
{ #++#
	a:=5
}

#+ Condicional simple con else +#
if (a > b)
{
    write("a es más grande que b (a > b)")
}
else
{
    write("a es más chico o igual a b (a <= b)")
}

#+ Condicional compuesto AND sin else +#
if (a > b AND c > b)
{
    write("a y c más grandes que b [a > b & c > b]")
}

#+ Condicional compuesto OR sin else +#
if (a > b OR c > b)
{
    write("a es más grande que b y c es más grande que b")
}

#+ Condicional compuesto NOT sin else +#
if (NOT a > b)
{
    write("a no es más grande que b -> !(a > b)")
}

#+ Condicional compuesto con else +#
if(a==0 AND b<c)
{ 
	a:=5
} else 
{
	b := f
}

#+ If anidado +#
if (a > b)
{
    if (a > b)
	{
    	write("a es más grande que b y c")
	}
}

#+ while +#
a := 1
b := 3

while (a > b)
{
    write("a es más grande que b")
    a := a + 1
}

#+ Operaciones Aritméticas +#
x := 27 - c
x := r + 500
x := 34 * 3
x := z / f

#+ Entrada y Salida +#
read(base)
read(base) #+ base es una variable +#
write(var1)  #+ var1 es una variable numérica definida previamente +#

#+ Llamada a funcion izZero() +#
s := 3
h := 44
contador := 10
while (isZero( contador - 10 ))
{
    write("El contador vale 10")
    contador := contador - 1
}
if (isZero( s*7+1-h/2 ))
{
    write("La expresión es igual a cero")
}

#+ Llamada a funcion equalExpressions() +#
a := 2
b := 3

y := equalExpressions(a + b, 5, b * 2, 3 + 2, a + b) 
y := equalExpressions(0, -5, a + b)


#+ ---------------------- +#
#+ EJEMPLO DE UN PROGRAMA +#
#+ ---------------------- +#
a1 := 5
a1 := 0.500
a1 := 0.5000000000000
a1 := .500000000
a1 := 00000.50000000
a1 := 00005.50000000
a1 := 00005.500000000001 #+ Precisión 9 decimales, este número es considerado igual que los de arriba +#
p1 := "hola"
p1 := "hola"
p2 := "chau"
D  := true
ar0 := 1
c:=d*(e-21)/4+j
while(h<20)
#+ Este es un comentario que se tiene que ignorar +#
{ #+ Este es otro comentario que se tiene que ignorar +#
	if( (ar0 / rem) == est_com )
	{
		sig := base * rend
	}
	else
		c := 5
}

if(a==0 AND b<c){a:=5}
else
{
	n_code := equalExpressions(0, -5, a + b)
	if( 5 == 5)
		broad++
	if(NOT false)
		c := 3
	else
			n_code--
}

write(var1)
read(var1)
write(5)

res := "Sintaxis OK"


#+ ---------------------- +#
#+ EJEMPLO DE ERRORES +#
#+ ---------------------- +#

#+ Esta es una asignación incorrecta +#
#+ a ::= 5 +#

#+ Esta es un while incorrecto +#
#+ while [a > b] { write("a es más grande que b") a := a + 1 } +#

#+ Esta es una sentencia if incorrecta +#
#+ 	if( (a == b ) 	+#
#+		a:=c   +#		
#+	else if	+#		
#+		c:=A	+#		
#+	else	+#	
#+		a:=c2	+#	

#+ Esta es una resta incorrecta +#
#+ x := 27 -- c +#

#+ Esta es una suma incorrecta +#
#+ x := r ++ 500 +#

#+ Esta es una multiplicación incorrecta +#
#+ x := 34 ** 3 +#

#+ Esta es una división incorrecta +#
#+ x := z // f +#

#+ Esta es una entrada incorrecta+#
#+ x := read var1 +#

#+ Esta es una entrada incorrecta+#
#+ x := read var1 +#

#+ Esta es una salida incorrecta+#
#+ write var1 +#

#+ Esta es una declaración de variables incorrecta +#
#+ int a,b,c +#

#+ Esta es un tipo de dato int que supera el rango máximo +#
#+ a := 9999999999999999999999999999 +#

#+ Esta es un tipo de dato float que supera el rango máximo +#
#+ a := 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.9999999999999999999999999999999 +#

#+ Esta es un tipo de dato string que supera el rango máximo +#
#+ a := "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +#

#+ Este es un comentario erróneo +#
#+ // comentario +#

#+ Esta es un condicional AND incorrecto +#
#+ AND(var1,var2) +#

#+ Este es un condicional OR incorrecto +#
#+ if (a > b || c > b) +#

#+ Esta es un condicional NOT incorrecto +#
#+  a =! b +#
